
;-----------
;  DRONES
;-----------


to setup-drones
  create-drones nb-drones
  
  reinitialize-drones ; TODO
end


to reinitialize-drones
  if nb-drones > 0 [
    ; get the size of the base to deploy the car accordingly
    let base-min-pxcor min [pxcor] of (patches with [base? and pzcor = mapAlt])
    let base-max-pxcor max [pxcor] of (patches with [base? and pzcor = mapAlt])
    let base-min-pycor min [pycor] of (patches with [base? and pzcor = mapAlt])
    let base-max-pycor max [pycor] of (patches with [base? and pzcor = mapAlt])

    ask drones
    [
      ; Init apparence NetLogo
      set pv d-life
      set shape "airplane"
      set color yellow
      set decollage? true
      set maxdir 10 * simu-speed
      ; Init des structures BDI
      ;set incoming-queue [] ; Do not change

      ; Init vars convois
      set speed 0.05 * simu-speed * d-speed
      ;set maxdir 10 * simu-speed * d-speed
      set heading 0
      set roll 0
      set pitch 0
      set finished? false
      set leader? false
      set dead? false
    set freq-tir 0 ; initialisée à 0 pour pouvoir tirer la premiere balle
                   ; Visu
                   ;set label who ; display the car names
    ]
    
    ; get the id of the first one
    let first-drone min [who] of drones
    
    ; configure the leader
    ask drone first-drone [
      set leader? true
      set color orange
      move-to patch base-max-pxcor base-max-pycor 1
    ]

    ; deploying the other car
    if nb-drones > 1 [
      ; ask non leader cars
      ask turtle-set sort-on [who] drones with [who > first-drone]
      [
        ; we create a link between them
        ;create-convoi-link-to turtle (who - 1)
        ;if who >= 4 and who mod 2 = 0 [ create-convoi-link-with turtle (who - 3) ]
        
        ; deploying
        ifelse (who - first-drone - 1) mod 2 = 0 [ set xcor base-min-pxcor ] [ set xcor base-max-pxcor ] ; a gauche ou a droite selon le nombre (pair ou impair respectivement)
        set ycor (base-max-pycor - (floor ((who - first-drone) / 2) / (nb-drones / 2) * (base-max-pycor - base-min-pycor))) ; d'une rangee de plus en plus basse toutes les deux voitures
        set zcor solAlt
      ] 
    ]
  ]
end



to go-drones
 ; let lead-conv one-of convois with [leader?]
  ask drones [
    if (pv > 0)[
      decollage      
      if (decollage? = false)[
        let nearest-ennemy min-one-of ennemies in-radius-nowrap d-vision [distance-nowrap myself]
        let nearest-convoi min-one-of convois in-radius-nowrap (d-vision / 3 * 2) [distance-nowrap myself]
        ifelse (nearest-ennemy != nobody and nearest-convoi != nobody)[
          if (nearest-ennemy != nobody)[
            set color blue
            attack-ennemi nearest-ennemy
          ]
        ]
        [follow-convois]
      ]
    ]
  ]
  
end


to decollage
  if (decollage? = true)[
    if ((pitch < 30) and (zcor < 5))[
      set pitch pitch + 10
    ]
    if (zcor >= 5)[
      if (pitch != 0)[
        set pitch pitch - 10
      ]
    ]
    fd speed
  ]
  if (pitch = 0)[
    set decollage? false
  ]
  ;else set decollage false
end


to follow-convois
if (decollage? = false)[
;[let nearest-convoi min-one-of convois in-radius-nowrap d-vision [distance myself]
  let nearest-convoi one-of convois in-radius-nowrap d-vision
  ; Calcule de l'angle avec la cible
  let headingFlag heading
  ; ifelse ( (any? convois in-radius d-vision  )); or (nobody =  convois  in-radius d-dist-tir ) )
  ifelse (nearest-convoi != nobody)[
    ifelse ((distance nearest-convoi <= d-vision) )[ ; and (distance nearest-convoi >= d-dist-tir ))
      set color magenta
      set pitch 0
      set roll 0
      set headingFlag (towards nearest-convoi)
      let dirCorrection subtract-headings headingFlag heading
      ; Arrondissement de l'angle (on ne veut pas faire de micro tournant)
      set dirCorrection precision dirCorrection 2
      ; Limite de l'angle, pour que ce soit plus realiste (la voiture ne peut pas faire un demi-tour sur place!)
      ifelse dirCorrection > maxdir[ ; limite a droite
        set dirCorrection maxdir
        ; On tourne
        rt dirCorrection
        if (roll < 20)[
          set roll roll + 15
        ]
      ]
      [
        if dirCorrection < maxdir * -1 [ ; limite a gauche
          set dirCorrection maxdir * -1
          ; On tourne
          rt dirCorrection
          if (roll > -20)[
            set roll roll - 15
          ]
        ]
      ]
      
      if (not detect-obstacle)[
        fd speed
      ]
    ]
    [
      set color red
  ;set to-follow nobody
      random-walk-drone
    ]
  ]
  [
    set color red
  ;set to-follow nobody
    random-walk-drone
  ]
] 

end

to return-base
  aller base-entry
end


to aller[goal ]
  ; Calcule de l'angle avec la cible
  let headingFlag heading

   set headingFlag (towards goal)

  let dirCorrection subtract-headings headingFlag heading
  ; Arrondissement de l'angle (on ne veut pas faire de micro tournant)
  set dirCorrection precision dirCorrection 2
  ; Limite de l'angle, pour que ce soit plus realiste (la voiture ne peut pas faire un demi-tour sur place!)
  ifelse dirCorrection > maxdir [ ; limite a droite
    set dirCorrection maxdir
  ]
  [
    if dirCorrection < maxdir * -1 [ ; limite a gauche
      set dirCorrection maxdir * -1
    ]
  ]
  ; On tourne
  rt dirCorrection
  ; Deplacement!
  set pitch 0 ; make sure there's no pitch ever, else the car will disappear in the ground
  fd speed ; Avance
end



to attack-ennemi [nearest]
  set heading towards nearest
  ifelse (any? ennemies in-radius-nowrap d-dist-tir) [
    set color yellow
    ifelse (freq-tir = 0) [
      face nearest
      hatch-bullets 1 [
        set num  2
        set speed 0.2 * simu-speed
        set energy (d-dist-tir * 20)
        set color red ; TODO calcul a déterminer
      ]
      set freq-tir d-frequence-tir * d-dist-tir / simu-speed
      set pitch 0
    ]
    [set freq-tir (freq-tir - 1)]
  ]
  [fd speed ]
  ;[if not detect-obstacle [fd speed]] ; ils vont a l'encontre du convoi qu'ils on vu
end



to random-walk-drone
  if (not detect-obstacle)[
    set pitch 0
    set roll 0
    forward speed
  ]
  ifelse (random 3 < 2)[
    rt random 20
    if (roll < 5)[
      set roll roll + 15
    ]
  ]
  [
    lt random 20
    if (roll < 5)[
      set roll roll + 15
    ]
  ]
end
